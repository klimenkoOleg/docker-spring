plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.oklimenko'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.12'
    mapstructVersion = "1.2.0.Final"
    postgresqlVersion = "42.2.12"
    flywayVersion = "5.2.4"
}

springBoot {
    mainClassName = 'com.oklimenko.dockerspring.DockerSpringApplication'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.projectlombok:lombok:${lombokVersion}"

    //mapstruct
    implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    //database
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
//    implementation "org.flywaydb:flyway-core:${flywayVersion}"

    //	testing
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.projectlombok:lombok:${lombokVersion}"

    //	annotations
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    // Prothemeus monitoring
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //compile 'org.springframework.metrics:spring-metrics:latest.release'
    //compile 'io.prometheus:simpleclient_common:latest.release'
}

test {
    useJUnitPlatform()
}
